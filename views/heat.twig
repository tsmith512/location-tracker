{% extends "base.twig" %}

{% block title %}Heatmap{% endblock %}

{% block content %}

<div class="row">
  <div class="col-md-4">
    <div class="box box-primary">
      <form id="adjustments">
        <div class="box-header with-border">
          <h3 class="box-title">Adjustments</h3>
        </div>
        <div class="box-body">
          <div class="form-group">
            <label for="radius">Radius</label>
            <input type="text" class="form-control" value="50" id="radius" />
          </div>
          <div class="form-group">
            <label for="blur">Blur</label>
            <input type="text" class="form-control" value="30" id="blur" />
          </div>
        </div>
      </form>
    </div>
  </div>
  <div class="col-md-8">
    <div class="box">
      <div id="map" style="height:200px;width:100%"></div>
    </div>
  </div>
</div>

{% endblock %}

{% block scripts %}
  <script src='https://api.mapbox.com/mapbox.js/plugins/leaflet-heat/v0.1.3/leaflet-heat.js'></script>
  <script>
    // Provide your access token
    L.mapbox.accessToken = 'pk.eyJ1IjoidHNtaXRoNTEyIiwiYSI6IlBERzc0Mk0ifQ.IBWVp4rs5wKQ_8pkLOBXUw';
    // Create a map in the div #map
    var map = L.mapbox.map('map', 'tsmith512.b3c22e74');

    $('#map').height($('footer').offset().top - $('#map').offset().top - 90);

    // https://github.com/Leaflet/Leaflet.heat/issues/12
    geoJson2heat = function(geojson, intensity) {
      return geojson.features.map(function(feature) {
        return [parseFloat(feature.geometry.coordinates[1]), parseFloat(feature.geometry.coordinates[0]), intensity];
      });
    }

    // http://stackoverflow.com/questions/26629000/mapbox-issue-with-parsing-json-data-for-heatmap
    var heat = L.heatLayer([], { maxZoom: 12 }).addTo(map);
    $.getJSON('/public/api/location/history/points', function(data) {
      var geojson = L.geoJson(data, {
        onEachFeature: function(feature, layer) {
          heat.addLatLng(L.latLng(feature.geometry.coordinates[1], feature.geometry.coordinates[0]), { radius: 5, blur: 5});
        }
      });
    });

    $('form#adjustments input').on('change', function(e) {
      var options = {};
      options[$(this).attr('id')] = parseInt($(this).val());
      heat.setOptions(options);
    });

  </script>
{% endblock %}
